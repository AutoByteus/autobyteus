### Automated Coding Workflow

#### 1. Story/Feature Description:

1.1. **Background**: 
With the advent of advanced AI and large language models (LLMs), there's a growing need to harness their power for automated coding tasks. The Automated Coding Workflow serves as a structured interface to interact with LLMs. This modular, step-by-step approach simplifies and streamlines the process of utilizing the capabilities of LLMs for coding tasks by breaking down the process into distinct phases.

1.2. **User Persona**: 
Software Developer or AI System:
  - Looking to automate certain coding tasks using LLMs.
  - Desires a structured approach to interact with LLMs for coding tasks.
  - Requires flexibility to execute specific steps and serialize the workflow.

1.3. **User Journey**: 
A developer or system initializes the Automated Coding Workflow. They provide specific inputs at various stages, such as requirements, design, implementation, and testing. The workflow dispatches these inputs as prompts to the LLM. The LLM processes these prompts and returns appropriate outputs, guiding the developer or system through each phase. The user has the flexibility to serialize the workflow, execute specific steps, and monitor the status of the workflow.

#### 2. Requirements:

2.1. **Functional Requirements**:

- **Initialization**:
   - Initialize the automated coding workflow using specific configurations.
   - Support for multi-layered steps and sub-steps.

- **Workflow Management**:
   - Serialize the entire workflow to JSON format.
   - Execute specific steps in the workflow as needed.
   - Track and manage different states of the workflow.

- **Interaction with LLM**:
   - Dispatch uniquely configured prompts to the LLM for processing.
   - Receive and handle responses from the LLM.

- **Steps in Workflow**:
   - **RequirementStep**:
     - Accept and process coding requirements.
     - Construct a unique prompt for the LLM based on the requirements.
   - **ArchitectureDesignStep**:
     - Manage the architectural design phase.
     - Construct a unique prompt for the LLM based on design needs.
   - **ImplementationStep**:
     - Oversee the coding implementation phase.
     - Construct a unique prompt for the LLM based on implementation details.
   - **TestGenerationStep**:
     - Generate tests for Python code.
     - Construct a unique prompt for the LLM based on the code to generate tests.
